
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module pcihello(

	//////////// CLOCK //////////
	CLOCK_50, 	// BANK 4
	CLOCK2_50, 	// BANK 7
	CLOCK3_50, 	// BANK 3A

	//////////// LED (High Active) //////////
	LEDG,
	LEDR,

	//////////// KEY (Active Low) //////////
	KEY,

	// switches
   SW,
	
	//////////// SEG7 (Low Active) //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

	//////////// PCIe //////////
	PCIE_PERST_N,
	PCIE_REFCLK_P,
	PCIE_RX_P,
	PCIE_TX_P,
	PCIE_WAKE_N,

	//////////// Fan Control //////////
	FAN_CTRL 
);

//=======================================================
//  PARAMETER declarations
//=======================================================


//=======================================================
//  PORT declarations
//=======================================================

//////////// CLOCK //////////
input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

//////////// LED (High Active) //////////
output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

//////////// KEY (Active Low) //////////
input 		     [3:0]		KEY;
input            [17:0]	   SW;

//////////// SEG7 (Low Active) //////////
output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

//////////// PCIe //////////
input 		          		PCIE_PERST_N;
input 		          		PCIE_REFCLK_P;
input 		     [1:0]		PCIE_RX_P;
output		     [1:0]		PCIE_TX_P;
output		          		PCIE_WAKE_N;

//////////// Fan Control //////////
inout 		          		FAN_CTRL;


//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [31:0] hexbus;
wire [15:0] inbus;
wire [31:0] sete_segmentos;
wire [31:0] botoes;
wire [31:0] switches;
wire [31:0] led_r;
wire [31:0] led_g;
reg fan;

//=======================================================
//  Structural coding
//=======================================================

    pcihellocore u0 (
        .pcie_hard_ip_0_rx_in_rx_datain_0       (PCIE_RX_P[0]),       //     pcie_hard_ip_0_rx_in.rx_datain_0
        .pcie_hard_ip_0_tx_out_tx_dataout_0     (PCIE_TX_P[0]),     //    pcie_hard_ip_0_tx_out.tx_dataout_0
        .pcie_hard_ip_0_powerdown_pll_powerdown (PCIE_WAKE_N), // pcie_hard_ip_0_powerdown.pll_powerdown
        .pcie_hard_ip_0_powerdown_gxb_powerdown (PCIE_WAKE_N), //                         .gxb_powerdown
        .pcie_hard_ip_0_refclk_export           (PCIE_REFCLK_P),           //    pcie_hard_ip_0_refclk.export
        .pcie_hard_ip_0_pcie_rstn_export        (PCIE_PERST_N),
        .hexport_external_connection_export     (hexbus),     // hexport_external_connection.export
        .inport_external_connection_export      (inbus), 		  //  inport_external_connection.export
		  .sete_segmentos_external_connection_export		(sete_segmentos),
		  .botoes_external_connection_export 		(botoes),
		  .switches_external_connection_export		(switches),
		  .led_r_external_connection_export			(led_r),
		  .led_g_external_connection_export			(led_g),
		  .fan_external_connection_export			(fan)
    );


	//////////// FAN Control //////////

//assign FAN_CTRL = 1'b1; 
// turn off FAN -> ja mudamos, ta ligado (eh ligado em high)
assign FAN_CTRL = fan;


//sete segmentos
assign HEX0 = hexbus[ 6: 0];
assign HEX1 = hexbus[14: 8];
assign HEX2 = hexbus[22:16];
assign HEX3 = hexbus[30:24];
assign HEX4 = sete_segmentos[6:0];
assign HEX5 = sete_segmentos[14:8];
assign HEX6 = sete_segmentos[22:16];
assign HEX7 = sete_segmentos[30:24];

//botoes
assign botoes[0] = KEY[0];
assign botoes[1] = KEY[1];
assign botoes[2] = KEY[2];
assign botoes[3] = KEY[3];

//switches
assign switches[0] = SW[0];
assign switches[1] = SW[1];
assign switches[2] = SW[2];
assign switches[3] = SW[3];
assign switches[4] = SW[4];
assign switches[5] = SW[5];
assign switches[6] = SW[6];
assign switches[7] = SW[7];
assign switches[8] = SW[8];
assign switches[9] = SW[9];
assign switches[10] = SW[10];
assign switches[11] = SW[11];
assign switches[12] = SW[12];
assign switches[13] = SW[13];
assign switches[14] = SW[14];
assign switches[15] = SW[15];
assign switches[16] = SW[16];
assign switches[17] = SW[17];


//leds
//vermelhos
assign led_r[0] = LEDR[0];
assign led_r[1] = LEDR[1];
assign led_r[2] = LEDR[2];
assign led_r[3] = LEDR[3];
assign led_r[4] = LEDR[4];
assign led_r[5] = LEDR[5];
assign led_r[6] = LEDR[6];
assign led_r[7] = LEDR[7];
assign led_r[8] = LEDR[8];
assign led_r[9] = LEDR[9];
assign led_r[10] = LEDR[10];
assign led_r[11] = LEDR[11];
assign led_r[12] = LEDR[12];
assign led_r[13] = LEDR[13];
assign led_r[14] = LEDR[14];
assign led_r[15] = LEDR[15];
assign led_r[16] = LEDR[16];
assign led_r[17] = LEDR[17];

//verdes
assign led_g[0] = LEDG[0];
assign led_g[1] = LEDG[1];
assign led_g[2] = LEDG[2];
assign led_g[3] = LEDG[3];
assign led_g[4] = LEDG[4];
assign led_g[5] = LEDG[5];
assign led_g[6] = LEDG[6];
assign led_g[7] = LEDG[7];
assign led_g[8] = LEDG[8];




assign inbus = SW[15:0];

endmodule
